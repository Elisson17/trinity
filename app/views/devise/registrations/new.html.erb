<div class="bg-white rounded-2xl shadow-xl overflow-hidden">
  <div class="">
    <div class="w-full px-8 py-12 lg:px-12 flex items-center">
      <div class="max-w-md mx-auto w-full">
        <div class="text-center mb-8">
          <h1 class="text-2xl font-bold text-gray-900 mb-2">Criar conta grátis</h1>
          <p class="text-gray-600">Junte-se a nós e comece sua jornada</p>
        </div>



        <%= form_for(resource, as: resource_name, url: registration_path(resource_name), local: true, class: "space-y-6") do |f| %>
          <%= render "devise/shared/error_messages", resource: resource %>
          <div>
            <%= f.label :email, "E-mail", class: "block text-sm font-medium text-gray-700 mb-2" %>
            <%= f.email_field :email, 
                autofocus: true, 
                autocomplete: "email", 
                class: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors",
                placeholder: "seu@email.com" %>
          </div>

          <div>
            <%= f.label :name, "Nome", class: "block text-sm font-medium text-gray-700 mb-2" %>
            <%= f.text_field :name, 
                autocomplete: "name", 
                class: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors",
                placeholder: "Seu nome completo" %>
          </div>

          <div>
            <%= f.label :phone_number, "WhatsApp", class: "block text-sm font-medium text-gray-700 mb-2" %>
            <%= render RubyUI::MaskedInput.new(
                  name: "user[phone_number]",
                  placeholder: "(11) 99999-9999",
                  data: { maska: "(##) #####-####" },
                  class: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors",
                  id: "phone_field"
                ) %>
            <p class="text-xs text-gray-500 mt-1">Usado para verificação da conta e notificações importantes</p>
          </div>

          <div>
            <%= f.label :password, "Senha", class: "block text-sm font-medium text-gray-700 mb-2" %>
            <%= f.password_field :password, 
                autocomplete: "new-password", 
                class: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors",
                placeholder: "Crie uma senha segura",
                id: "password_field" %>
            <div id="password_feedback" class="text-xs mt-1 hidden">
              <span id="password_length_msg" class="text-red-500">A senha deve ter pelo menos 6 caracteres</span>
            </div>
          </div>

          <div>
            <%= f.label :password_confirmation, "Confirmar senha", class: "block text-sm font-medium text-gray-700 mb-2" %>
            <%= f.password_field :password_confirmation, 
                autocomplete: "new-password", 
                class: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors",
                placeholder: "Digite a senha novamente",
                id: "password_confirmation_field" %>
            <div id="password_match_feedback" class="text-xs mt-1 hidden">
              <span id="password_match_msg"></span>
            </div>
          </div>

          <div class="mt-4">
            <%= f.submit "Criar conta", 
                class: "w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors" %>
          </div>
        <% end %>

        <div class="mt-8 text-center">
          <p class="text-sm text-gray-600">
            Já tem uma conta?
            <%= link_to new_session_path(resource_name), class: "font-medium text-blue-600 hover:text-blue-500 ml-1" do %>
              Fazer login
            <% end %>
          </p>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const emailField = document.querySelector('input[name="user[email]"]');
    const nameField = document.querySelector('input[name="user[name]"]');
    const phoneField = document.getElementById('phone_field');
    const passwordField = document.getElementById('password_field');
    const passwordConfirmationField = document.getElementById('password_confirmation_field');
    const passwordFeedback = document.getElementById('password_feedback');
    const passwordLengthMsg = document.getElementById('password_length_msg');
    const passwordMatchFeedback = document.getElementById('password_match_feedback');
    const passwordMatchMsg = document.getElementById('password_match_msg');
    const form = document.querySelector('form');
    const submitButton = form.querySelector('input[type="submit"]');

    function validatePasswordLength() {
      const password = passwordField.value;
      
      if (password.length === 0) {
        passwordFeedback.classList.add('hidden');
        passwordField.className = passwordField.className.replace('border-red-300', 'border-gray-300').replace('border-green-300', 'border-gray-300');
        return false;
      }
      
      passwordFeedback.classList.remove('hidden');
      
      if (password.length < 6) {
        passwordLengthMsg.textContent = `A senha deve ter pelo menos 6 caracteres (${password.length}/6)`;
        passwordLengthMsg.className = 'text-red-500';
        passwordField.className = passwordField.className.replace('border-gray-300', 'border-red-300').replace('border-green-300', 'border-red-300');
        return false;
      } else {
        passwordLengthMsg.textContent = `Senha válida (${password.length} caracteres)`;
        passwordLengthMsg.className = 'text-green-500';
        passwordField.className = passwordField.className.replace('border-red-300', 'border-green-300').replace('border-gray-300', 'border-green-300');
        return true;
      }
    }

    function validatePasswordMatch() {
      const password = passwordField.value;
      const confirmation = passwordConfirmationField.value;
      
      if (confirmation.length === 0) {
        passwordMatchFeedback.classList.add('hidden');
        passwordConfirmationField.className = passwordConfirmationField.className.replace('border-red-300', 'border-gray-300').replace('border-green-300', 'border-gray-300');
        return false;
      }
      
      passwordMatchFeedback.classList.remove('hidden');
      
      if (password === confirmation && password.length >= 6) {
        passwordMatchMsg.textContent = 'As senhas coincidem ✓';
        passwordMatchMsg.className = 'text-green-500';
        passwordConfirmationField.className = passwordConfirmationField.className.replace('border-red-300', 'border-green-300').replace('border-gray-300', 'border-green-300');
        return true;
      } else {
        passwordMatchMsg.textContent = 'As senhas não coincidem';
        passwordMatchMsg.className = 'text-red-500';
        passwordConfirmationField.className = passwordConfirmationField.className.replace('border-green-300', 'border-red-300').replace('border-gray-300', 'border-red-300');
        return false;
      }
    }

    function validateRequiredFields() {
      const email = emailField.value.trim();
      const name = nameField.value.trim();
      const phone = phoneField.value.replace(/\D/g, '');
      
      return email.length > 0 && name.length > 0 && phone.length >= 10;
    }

    function validateForm() {
      const isPasswordValid = validatePasswordLength();
      const isPasswordMatch = validatePasswordMatch();
      const areRequiredFieldsFilled = validateRequiredFields();
      const isFormValid = isPasswordValid && isPasswordMatch && areRequiredFieldsFilled;
      
      if (submitButton) {
        if (isFormValid) {
          submitButton.disabled = false;
          submitButton.className = submitButton.className.replace('bg-gray-400 cursor-not-allowed', 'bg-blue-600 hover:bg-blue-700');
        } else {
          submitButton.disabled = true;
          submitButton.className = submitButton.className.replace('bg-blue-600 hover:bg-blue-700', 'bg-gray-400 cursor-not-allowed');
        }
      }
    }

    emailField.addEventListener('input', validateForm);
    nameField.addEventListener('input', validateForm);
    phoneField.addEventListener('input', validateForm);
    
    passwordField.addEventListener('input', function() {
      validatePasswordLength();
      validatePasswordMatch();
      validateForm();
    });

    passwordConfirmationField.addEventListener('input', function() {
      validatePasswordMatch();
      validateForm();
    });

    if (form) {
      form.addEventListener('submit', function(e) {
        const isPasswordValid = validatePasswordLength();
        const isPasswordMatch = validatePasswordMatch();
        const areRequiredFieldsFilled = validateRequiredFields();
        
        if (!isPasswordValid || !isPasswordMatch || !areRequiredFieldsFilled) {
          e.preventDefault();
          return false;
        }
        
        if (submitButton) {
          submitButton.disabled = true;
          submitButton.value = 'Criando conta...';
          submitButton.className = submitButton.className.replace('bg-blue-600 hover:bg-blue-700', 'bg-gray-400 cursor-not-allowed');
        }
      });
    }

    validateForm();
  });
</script>